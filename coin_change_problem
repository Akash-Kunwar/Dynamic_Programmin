Sample Input 0

4 3
1 2 3
Sample Output 0

4

https://www.hackerrank.com/challenges/coin-change/problem


#!/bin/python3

import math
import os
import random
import re
import sys

#
# Complete the 'getWays' function below.
#
# The function is expected to return a LONG_INTEGER.
# The function accepts following parameters:
#  1. INTEGER n
#  2. LONG_INTEGER_ARRAY c
#

def getWays(n, c):
    a=[[0]*(n+1)]*len(c)
    for i in range(len(c)):
        for j in range(n+1):
            if j==0:
                a[i][j]=1
            elif i==0:
                if j % c[i]==0:
                    a[i][j]=1
                else:
                    a[i][j]=0
            elif c[i]>j:
                a[i][j]=a[i-1][j]
            else:
                a[i][j]=a[i-1][j]+a[i][j-c[i]]
    return a[-1][-1]






if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    first_multiple_input = input().rstrip().split()

    n = int(first_multiple_input[0])

    m = int(first_multiple_input[1])

    c = list(map(int, input().rstrip().split()))

    # Print the number of ways of making change for 'n' units using coins having the values given by 'c'

    ways = getWays(n, c)

    fptr.write(str(ways) + '\n')

    fptr.close()
